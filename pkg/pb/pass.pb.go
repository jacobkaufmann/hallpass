// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pass.proto

package hallpass

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Pass represents an electronic pass to be at a location for a specified time window
type Pass struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FacultyId            int64                `protobuf:"varint,2,opt,name=faculty_id,json=facultyId,proto3" json:"faculty_id,omitempty"`
	StudentId            int64                `protobuf:"varint,3,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	Location             string               `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	CreationDate         *timestamp.Timestamp `protobuf:"bytes,5,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	ExpirationDate       *timestamp.Timestamp `protobuf:"bytes,6,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Pass) Reset()         { *m = Pass{} }
func (m *Pass) String() string { return proto.CompactTextString(m) }
func (*Pass) ProtoMessage()    {}
func (*Pass) Descriptor() ([]byte, []int) {
	return fileDescriptor_16a4379668fee93d, []int{0}
}

func (m *Pass) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pass.Unmarshal(m, b)
}
func (m *Pass) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pass.Marshal(b, m, deterministic)
}
func (m *Pass) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pass.Merge(m, src)
}
func (m *Pass) XXX_Size() int {
	return xxx_messageInfo_Pass.Size(m)
}
func (m *Pass) XXX_DiscardUnknown() {
	xxx_messageInfo_Pass.DiscardUnknown(m)
}

var xxx_messageInfo_Pass proto.InternalMessageInfo

func (m *Pass) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Pass) GetFacultyId() int64 {
	if m != nil {
		return m.FacultyId
	}
	return 0
}

func (m *Pass) GetStudentId() int64 {
	if m != nil {
		return m.StudentId
	}
	return 0
}

func (m *Pass) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *Pass) GetCreationDate() *timestamp.Timestamp {
	if m != nil {
		return m.CreationDate
	}
	return nil
}

func (m *Pass) GetExpirationDate() *timestamp.Timestamp {
	if m != nil {
		return m.ExpirationDate
	}
	return nil
}

type CreatePassRequest struct {
	FacultyId            int64                `protobuf:"varint,1,opt,name=faculty_id,json=facultyId,proto3" json:"faculty_id,omitempty"`
	StudentId            int64                `protobuf:"varint,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	Location             string               `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	ExpirationDate       *timestamp.Timestamp `protobuf:"bytes,4,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CreatePassRequest) Reset()         { *m = CreatePassRequest{} }
func (m *CreatePassRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePassRequest) ProtoMessage()    {}
func (*CreatePassRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_16a4379668fee93d, []int{1}
}

func (m *CreatePassRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePassRequest.Unmarshal(m, b)
}
func (m *CreatePassRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePassRequest.Marshal(b, m, deterministic)
}
func (m *CreatePassRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePassRequest.Merge(m, src)
}
func (m *CreatePassRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePassRequest.Size(m)
}
func (m *CreatePassRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePassRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePassRequest proto.InternalMessageInfo

func (m *CreatePassRequest) GetFacultyId() int64 {
	if m != nil {
		return m.FacultyId
	}
	return 0
}

func (m *CreatePassRequest) GetStudentId() int64 {
	if m != nil {
		return m.StudentId
	}
	return 0
}

func (m *CreatePassRequest) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *CreatePassRequest) GetExpirationDate() *timestamp.Timestamp {
	if m != nil {
		return m.ExpirationDate
	}
	return nil
}

type CreatePassResponse struct {
	Created              bool     `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePassResponse) Reset()         { *m = CreatePassResponse{} }
func (m *CreatePassResponse) String() string { return proto.CompactTextString(m) }
func (*CreatePassResponse) ProtoMessage()    {}
func (*CreatePassResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_16a4379668fee93d, []int{2}
}

func (m *CreatePassResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePassResponse.Unmarshal(m, b)
}
func (m *CreatePassResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePassResponse.Marshal(b, m, deterministic)
}
func (m *CreatePassResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePassResponse.Merge(m, src)
}
func (m *CreatePassResponse) XXX_Size() int {
	return xxx_messageInfo_CreatePassResponse.Size(m)
}
func (m *CreatePassResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePassResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePassResponse proto.InternalMessageInfo

func (m *CreatePassResponse) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func (m *CreatePassResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdatePassRequest struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ExpirationDate       *timestamp.Timestamp `protobuf:"bytes,2,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UpdatePassRequest) Reset()         { *m = UpdatePassRequest{} }
func (m *UpdatePassRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePassRequest) ProtoMessage()    {}
func (*UpdatePassRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_16a4379668fee93d, []int{3}
}

func (m *UpdatePassRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePassRequest.Unmarshal(m, b)
}
func (m *UpdatePassRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePassRequest.Marshal(b, m, deterministic)
}
func (m *UpdatePassRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePassRequest.Merge(m, src)
}
func (m *UpdatePassRequest) XXX_Size() int {
	return xxx_messageInfo_UpdatePassRequest.Size(m)
}
func (m *UpdatePassRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePassRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePassRequest proto.InternalMessageInfo

func (m *UpdatePassRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdatePassRequest) GetExpirationDate() *timestamp.Timestamp {
	if m != nil {
		return m.ExpirationDate
	}
	return nil
}

type UpdatePassResponse struct {
	Updated              bool     `protobuf:"varint,1,opt,name=updated,proto3" json:"updated,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePassResponse) Reset()         { *m = UpdatePassResponse{} }
func (m *UpdatePassResponse) String() string { return proto.CompactTextString(m) }
func (*UpdatePassResponse) ProtoMessage()    {}
func (*UpdatePassResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_16a4379668fee93d, []int{4}
}

func (m *UpdatePassResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePassResponse.Unmarshal(m, b)
}
func (m *UpdatePassResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePassResponse.Marshal(b, m, deterministic)
}
func (m *UpdatePassResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePassResponse.Merge(m, src)
}
func (m *UpdatePassResponse) XXX_Size() int {
	return xxx_messageInfo_UpdatePassResponse.Size(m)
}
func (m *UpdatePassResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePassResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePassResponse proto.InternalMessageInfo

func (m *UpdatePassResponse) GetUpdated() bool {
	if m != nil {
		return m.Updated
	}
	return false
}

func (m *UpdatePassResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetPassRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPassRequest) Reset()         { *m = GetPassRequest{} }
func (m *GetPassRequest) String() string { return proto.CompactTextString(m) }
func (*GetPassRequest) ProtoMessage()    {}
func (*GetPassRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_16a4379668fee93d, []int{5}
}

func (m *GetPassRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPassRequest.Unmarshal(m, b)
}
func (m *GetPassRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPassRequest.Marshal(b, m, deterministic)
}
func (m *GetPassRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPassRequest.Merge(m, src)
}
func (m *GetPassRequest) XXX_Size() int {
	return xxx_messageInfo_GetPassRequest.Size(m)
}
func (m *GetPassRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPassRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPassRequest proto.InternalMessageInfo

func (m *GetPassRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ListPassesRequest struct {
	FacultyId            int64                `protobuf:"varint,1,opt,name=faculty_id,json=facultyId,proto3" json:"faculty_id,omitempty"`
	StudentId            int64                `protobuf:"varint,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	Location             string               `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	CreationDate         *timestamp.Timestamp `protobuf:"bytes,4,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	ExpirationDate       *timestamp.Timestamp `protobuf:"bytes,5,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListPassesRequest) Reset()         { *m = ListPassesRequest{} }
func (m *ListPassesRequest) String() string { return proto.CompactTextString(m) }
func (*ListPassesRequest) ProtoMessage()    {}
func (*ListPassesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_16a4379668fee93d, []int{6}
}

func (m *ListPassesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPassesRequest.Unmarshal(m, b)
}
func (m *ListPassesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPassesRequest.Marshal(b, m, deterministic)
}
func (m *ListPassesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPassesRequest.Merge(m, src)
}
func (m *ListPassesRequest) XXX_Size() int {
	return xxx_messageInfo_ListPassesRequest.Size(m)
}
func (m *ListPassesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPassesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPassesRequest proto.InternalMessageInfo

func (m *ListPassesRequest) GetFacultyId() int64 {
	if m != nil {
		return m.FacultyId
	}
	return 0
}

func (m *ListPassesRequest) GetStudentId() int64 {
	if m != nil {
		return m.StudentId
	}
	return 0
}

func (m *ListPassesRequest) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *ListPassesRequest) GetCreationDate() *timestamp.Timestamp {
	if m != nil {
		return m.CreationDate
	}
	return nil
}

func (m *ListPassesRequest) GetExpirationDate() *timestamp.Timestamp {
	if m != nil {
		return m.ExpirationDate
	}
	return nil
}

func init() {
	proto.RegisterType((*Pass)(nil), "hallpass.Pass")
	proto.RegisterType((*CreatePassRequest)(nil), "hallpass.CreatePassRequest")
	proto.RegisterType((*CreatePassResponse)(nil), "hallpass.CreatePassResponse")
	proto.RegisterType((*UpdatePassRequest)(nil), "hallpass.UpdatePassRequest")
	proto.RegisterType((*UpdatePassResponse)(nil), "hallpass.UpdatePassResponse")
	proto.RegisterType((*GetPassRequest)(nil), "hallpass.GetPassRequest")
	proto.RegisterType((*ListPassesRequest)(nil), "hallpass.ListPassesRequest")
}

func init() { proto.RegisterFile("pass.proto", fileDescriptor_16a4379668fee93d) }

var fileDescriptor_16a4379668fee93d = []byte{
	// 430 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x94, 0x4d, 0xef, 0x93, 0x40,
	0x10, 0xc6, 0xbb, 0x94, 0x7f, 0x5f, 0xa6, 0x8a, 0xe9, 0x9e, 0x08, 0x6a, 0x24, 0x9c, 0x7a, 0xa2,
	0xa6, 0xc6, 0xa3, 0xf1, 0x50, 0x13, 0x6d, 0xe2, 0xc1, 0xa0, 0x9e, 0x9b, 0x2d, 0x4c, 0xdb, 0x4d,
	0x68, 0x41, 0x76, 0x31, 0xfa, 0x51, 0xfc, 0x1a, 0x7e, 0x35, 0x13, 0xcf, 0x66, 0x17, 0x28, 0x08,
	0x0d, 0xa6, 0x9a, 0x78, 0xeb, 0xcc, 0xec, 0x3e, 0xfd, 0x3d, 0xfb, 0x4c, 0x00, 0x48, 0x99, 0x10,
	0x7e, 0x9a, 0x25, 0x32, 0xa1, 0x93, 0x23, 0x8b, 0x63, 0x55, 0x3b, 0x4f, 0x0e, 0x49, 0x72, 0x88,
	0x71, 0xa9, 0xfb, 0xbb, 0x7c, 0xbf, 0x94, 0xfc, 0x84, 0x42, 0xb2, 0x53, 0x5a, 0x1c, 0xf5, 0x7e,
	0x12, 0x30, 0xdf, 0x31, 0x21, 0xa8, 0x05, 0x06, 0x8f, 0x6c, 0xe2, 0x92, 0xc5, 0x30, 0x30, 0x78,
	0x44, 0x1f, 0x03, 0xec, 0x59, 0x98, 0xc7, 0xf2, 0xeb, 0x96, 0x47, 0xb6, 0xa1, 0xfb, 0xd3, 0xb2,
	0xb3, 0xd1, 0x63, 0x21, 0xf3, 0x08, 0xcf, 0x52, 0x8d, 0x87, 0xc5, 0xb8, 0xec, 0x6c, 0x22, 0xea,
	0xc0, 0x24, 0x4e, 0x42, 0x26, 0x79, 0x72, 0xb6, 0x4d, 0x97, 0x2c, 0xa6, 0xc1, 0xa5, 0xa6, 0x2f,
	0xe1, 0x7e, 0x98, 0xa1, 0xfe, 0xbd, 0x8d, 0x98, 0x44, 0xfb, 0xce, 0x25, 0x8b, 0xd9, 0xca, 0xf1,
	0x0b, 0x56, 0xbf, 0x62, 0xf5, 0x3f, 0x54, 0xac, 0xc1, 0xbd, 0xea, 0xc2, 0x2b, 0x26, 0x91, 0xae,
	0xe1, 0x01, 0x7e, 0x49, 0x79, 0xd6, 0x90, 0x18, 0xfd, 0x51, 0xc2, 0xaa, 0xaf, 0x28, 0x11, 0xef,
	0x3b, 0x81, 0xf9, 0x5a, 0xa9, 0xa2, 0xb2, 0x1f, 0xe0, 0xa7, 0x1c, 0x85, 0x6c, 0xb9, 0x26, 0xfd,
	0xae, 0x8d, 0x3e, 0xd7, 0xc3, 0x96, 0xeb, 0x2b, 0xd0, 0xe6, 0xcd, 0xd0, 0x6f, 0x80, 0x36, 0x99,
	0x45, 0x9a, 0x9c, 0x05, 0x52, 0x1b, 0xc6, 0xfa, 0x7d, 0xb0, 0x20, 0x9e, 0x04, 0x55, 0xa9, 0x26,
	0x27, 0x14, 0x82, 0x1d, 0x50, 0xc3, 0x4e, 0x83, 0xaa, 0xf4, 0x8e, 0x30, 0xff, 0x98, 0x46, 0x2d,
	0xf7, 0xed, 0x1d, 0xb8, 0xc2, 0x6c, 0xfc, 0x0d, 0x73, 0xf3, 0x9f, 0x6a, 0xe6, 0x5c, 0x77, 0x2f,
	0xcc, 0x65, 0xd9, 0xc3, 0xec, 0x82, 0xf5, 0x1a, 0x65, 0x0f, 0xb0, 0xf7, 0x83, 0xc0, 0xfc, 0x2d,
	0x17, 0xfa, 0x0c, 0xfe, 0x87, 0x50, 0x3b, 0xab, 0x6c, 0xfe, 0xfb, 0x2a, 0xdf, 0xdd, 0xfa, 0xc2,
	0xab, 0x6f, 0x06, 0xcc, 0x94, 0xe3, 0xf7, 0x98, 0x7d, 0xe6, 0x21, 0xd2, 0x0d, 0x40, 0xbd, 0x25,
	0xf4, 0xa1, 0x5f, 0x7d, 0x0d, 0xfc, 0xce, 0xbe, 0x3b, 0x8f, 0xae, 0x0f, 0x8b, 0x90, 0xbc, 0x81,
	0x92, 0xaa, 0xc3, 0x6b, 0x4a, 0x75, 0x96, 0xa7, 0x29, 0xd5, 0xcd, 0xdb, 0x1b, 0xd0, 0xe7, 0x30,
	0x2e, 0xd3, 0xa3, 0x76, 0x7d, 0xf4, 0xf7, 0x40, 0x1d, 0xab, 0x9e, 0xa8, 0xb6, 0x37, 0xa0, 0x2f,
	0x00, 0xea, 0x44, 0x9b, 0x04, 0x9d, 0x9c, 0xbb, 0x97, 0x9f, 0x92, 0xdd, 0x48, 0xbf, 0xdf, 0xb3,
	0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xca, 0x2a, 0x26, 0x85, 0x1f, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PassServiceClient is the client API for PassService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PassServiceClient interface {
	CreatePass(ctx context.Context, in *CreatePassRequest, opts ...grpc.CallOption) (*CreatePassResponse, error)
	UpdatePass(ctx context.Context, in *UpdatePassRequest, opts ...grpc.CallOption) (*UpdatePassResponse, error)
	GetPass(ctx context.Context, in *GetPassRequest, opts ...grpc.CallOption) (*Pass, error)
	ListPasses(ctx context.Context, in *ListPassesRequest, opts ...grpc.CallOption) (PassService_ListPassesClient, error)
}

type passServiceClient struct {
	cc *grpc.ClientConn
}

func NewPassServiceClient(cc *grpc.ClientConn) PassServiceClient {
	return &passServiceClient{cc}
}

func (c *passServiceClient) CreatePass(ctx context.Context, in *CreatePassRequest, opts ...grpc.CallOption) (*CreatePassResponse, error) {
	out := new(CreatePassResponse)
	err := c.cc.Invoke(ctx, "/hallpass.PassService/CreatePass", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *passServiceClient) UpdatePass(ctx context.Context, in *UpdatePassRequest, opts ...grpc.CallOption) (*UpdatePassResponse, error) {
	out := new(UpdatePassResponse)
	err := c.cc.Invoke(ctx, "/hallpass.PassService/UpdatePass", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *passServiceClient) GetPass(ctx context.Context, in *GetPassRequest, opts ...grpc.CallOption) (*Pass, error) {
	out := new(Pass)
	err := c.cc.Invoke(ctx, "/hallpass.PassService/GetPass", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *passServiceClient) ListPasses(ctx context.Context, in *ListPassesRequest, opts ...grpc.CallOption) (PassService_ListPassesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PassService_serviceDesc.Streams[0], "/hallpass.PassService/ListPasses", opts...)
	if err != nil {
		return nil, err
	}
	x := &passServiceListPassesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PassService_ListPassesClient interface {
	Recv() (*Pass, error)
	grpc.ClientStream
}

type passServiceListPassesClient struct {
	grpc.ClientStream
}

func (x *passServiceListPassesClient) Recv() (*Pass, error) {
	m := new(Pass)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PassServiceServer is the server API for PassService service.
type PassServiceServer interface {
	CreatePass(context.Context, *CreatePassRequest) (*CreatePassResponse, error)
	UpdatePass(context.Context, *UpdatePassRequest) (*UpdatePassResponse, error)
	GetPass(context.Context, *GetPassRequest) (*Pass, error)
	ListPasses(*ListPassesRequest, PassService_ListPassesServer) error
}

// UnimplementedPassServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPassServiceServer struct {
}

func (*UnimplementedPassServiceServer) CreatePass(ctx context.Context, req *CreatePassRequest) (*CreatePassResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePass not implemented")
}
func (*UnimplementedPassServiceServer) UpdatePass(ctx context.Context, req *UpdatePassRequest) (*UpdatePassResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePass not implemented")
}
func (*UnimplementedPassServiceServer) GetPass(ctx context.Context, req *GetPassRequest) (*Pass, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPass not implemented")
}
func (*UnimplementedPassServiceServer) ListPasses(req *ListPassesRequest, srv PassService_ListPassesServer) error {
	return status.Errorf(codes.Unimplemented, "method ListPasses not implemented")
}

func RegisterPassServiceServer(s *grpc.Server, srv PassServiceServer) {
	s.RegisterService(&_PassService_serviceDesc, srv)
}

func _PassService_CreatePass_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePassRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PassServiceServer).CreatePass(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hallpass.PassService/CreatePass",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PassServiceServer).CreatePass(ctx, req.(*CreatePassRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PassService_UpdatePass_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePassRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PassServiceServer).UpdatePass(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hallpass.PassService/UpdatePass",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PassServiceServer).UpdatePass(ctx, req.(*UpdatePassRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PassService_GetPass_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPassRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PassServiceServer).GetPass(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hallpass.PassService/GetPass",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PassServiceServer).GetPass(ctx, req.(*GetPassRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PassService_ListPasses_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListPassesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PassServiceServer).ListPasses(m, &passServiceListPassesServer{stream})
}

type PassService_ListPassesServer interface {
	Send(*Pass) error
	grpc.ServerStream
}

type passServiceListPassesServer struct {
	grpc.ServerStream
}

func (x *passServiceListPassesServer) Send(m *Pass) error {
	return x.ServerStream.SendMsg(m)
}

var _PassService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hallpass.PassService",
	HandlerType: (*PassServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePass",
			Handler:    _PassService_CreatePass_Handler,
		},
		{
			MethodName: "UpdatePass",
			Handler:    _PassService_UpdatePass_Handler,
		},
		{
			MethodName: "GetPass",
			Handler:    _PassService_GetPass_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListPasses",
			Handler:       _PassService_ListPasses_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "pass.proto",
}
