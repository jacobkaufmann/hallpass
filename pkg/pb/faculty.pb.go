// Code generated by protoc-gen-go. DO NOT EDIT.
// source: faculty.proto

package hallpass

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Faculty represents a member of a school's faculty
type Faculty struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	School               string   `protobuf:"bytes,2,opt,name=school,proto3" json:"school,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	FirstName            string   `protobuf:"bytes,4,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Faculty) Reset()         { *m = Faculty{} }
func (m *Faculty) String() string { return proto.CompactTextString(m) }
func (*Faculty) ProtoMessage()    {}
func (*Faculty) Descriptor() ([]byte, []int) {
	return fileDescriptor_72b9aa22f203a502, []int{0}
}

func (m *Faculty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Faculty.Unmarshal(m, b)
}
func (m *Faculty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Faculty.Marshal(b, m, deterministic)
}
func (m *Faculty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Faculty.Merge(m, src)
}
func (m *Faculty) XXX_Size() int {
	return xxx_messageInfo_Faculty.Size(m)
}
func (m *Faculty) XXX_DiscardUnknown() {
	xxx_messageInfo_Faculty.DiscardUnknown(m)
}

var xxx_messageInfo_Faculty proto.InternalMessageInfo

func (m *Faculty) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Faculty) GetSchool() string {
	if m != nil {
		return m.School
	}
	return ""
}

func (m *Faculty) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Faculty) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Faculty) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

type AddFacultyRequest struct {
	School               string   `protobuf:"bytes,1,opt,name=school,proto3" json:"school,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	FirstName            string   `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFacultyRequest) Reset()         { *m = AddFacultyRequest{} }
func (m *AddFacultyRequest) String() string { return proto.CompactTextString(m) }
func (*AddFacultyRequest) ProtoMessage()    {}
func (*AddFacultyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_72b9aa22f203a502, []int{1}
}

func (m *AddFacultyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFacultyRequest.Unmarshal(m, b)
}
func (m *AddFacultyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFacultyRequest.Marshal(b, m, deterministic)
}
func (m *AddFacultyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFacultyRequest.Merge(m, src)
}
func (m *AddFacultyRequest) XXX_Size() int {
	return xxx_messageInfo_AddFacultyRequest.Size(m)
}
func (m *AddFacultyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFacultyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddFacultyRequest proto.InternalMessageInfo

func (m *AddFacultyRequest) GetSchool() string {
	if m != nil {
		return m.School
	}
	return ""
}

func (m *AddFacultyRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AddFacultyRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *AddFacultyRequest) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

type AddFacultyResponse struct {
	Added                bool     `protobuf:"varint,1,opt,name=added,proto3" json:"added,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFacultyResponse) Reset()         { *m = AddFacultyResponse{} }
func (m *AddFacultyResponse) String() string { return proto.CompactTextString(m) }
func (*AddFacultyResponse) ProtoMessage()    {}
func (*AddFacultyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_72b9aa22f203a502, []int{2}
}

func (m *AddFacultyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFacultyResponse.Unmarshal(m, b)
}
func (m *AddFacultyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFacultyResponse.Marshal(b, m, deterministic)
}
func (m *AddFacultyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFacultyResponse.Merge(m, src)
}
func (m *AddFacultyResponse) XXX_Size() int {
	return xxx_messageInfo_AddFacultyResponse.Size(m)
}
func (m *AddFacultyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFacultyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddFacultyResponse proto.InternalMessageInfo

func (m *AddFacultyResponse) GetAdded() bool {
	if m != nil {
		return m.Added
	}
	return false
}

func (m *AddFacultyResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateFacultyRequest struct {
	School               string   `protobuf:"bytes,1,opt,name=school,proto3" json:"school,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	FirstName            string   `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateFacultyRequest) Reset()         { *m = UpdateFacultyRequest{} }
func (m *UpdateFacultyRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateFacultyRequest) ProtoMessage()    {}
func (*UpdateFacultyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_72b9aa22f203a502, []int{3}
}

func (m *UpdateFacultyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateFacultyRequest.Unmarshal(m, b)
}
func (m *UpdateFacultyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateFacultyRequest.Marshal(b, m, deterministic)
}
func (m *UpdateFacultyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateFacultyRequest.Merge(m, src)
}
func (m *UpdateFacultyRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateFacultyRequest.Size(m)
}
func (m *UpdateFacultyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateFacultyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateFacultyRequest proto.InternalMessageInfo

func (m *UpdateFacultyRequest) GetSchool() string {
	if m != nil {
		return m.School
	}
	return ""
}

func (m *UpdateFacultyRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UpdateFacultyRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *UpdateFacultyRequest) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

type UpdateFacultyResponse struct {
	Updated              bool     `protobuf:"varint,1,opt,name=updated,proto3" json:"updated,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateFacultyResponse) Reset()         { *m = UpdateFacultyResponse{} }
func (m *UpdateFacultyResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateFacultyResponse) ProtoMessage()    {}
func (*UpdateFacultyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_72b9aa22f203a502, []int{4}
}

func (m *UpdateFacultyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateFacultyResponse.Unmarshal(m, b)
}
func (m *UpdateFacultyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateFacultyResponse.Marshal(b, m, deterministic)
}
func (m *UpdateFacultyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateFacultyResponse.Merge(m, src)
}
func (m *UpdateFacultyResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateFacultyResponse.Size(m)
}
func (m *UpdateFacultyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateFacultyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateFacultyResponse proto.InternalMessageInfo

func (m *UpdateFacultyResponse) GetUpdated() bool {
	if m != nil {
		return m.Updated
	}
	return false
}

func (m *UpdateFacultyResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetFacultyRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFacultyRequest) Reset()         { *m = GetFacultyRequest{} }
func (m *GetFacultyRequest) String() string { return proto.CompactTextString(m) }
func (*GetFacultyRequest) ProtoMessage()    {}
func (*GetFacultyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_72b9aa22f203a502, []int{5}
}

func (m *GetFacultyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFacultyRequest.Unmarshal(m, b)
}
func (m *GetFacultyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFacultyRequest.Marshal(b, m, deterministic)
}
func (m *GetFacultyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFacultyRequest.Merge(m, src)
}
func (m *GetFacultyRequest) XXX_Size() int {
	return xxx_messageInfo_GetFacultyRequest.Size(m)
}
func (m *GetFacultyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFacultyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFacultyRequest proto.InternalMessageInfo

func (m *GetFacultyRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetFacultyRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type ListFacultyRequest struct {
	School               string   `protobuf:"bytes,1,opt,name=school,proto3" json:"school,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	FirstName            string   `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListFacultyRequest) Reset()         { *m = ListFacultyRequest{} }
func (m *ListFacultyRequest) String() string { return proto.CompactTextString(m) }
func (*ListFacultyRequest) ProtoMessage()    {}
func (*ListFacultyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_72b9aa22f203a502, []int{6}
}

func (m *ListFacultyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFacultyRequest.Unmarshal(m, b)
}
func (m *ListFacultyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFacultyRequest.Marshal(b, m, deterministic)
}
func (m *ListFacultyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFacultyRequest.Merge(m, src)
}
func (m *ListFacultyRequest) XXX_Size() int {
	return xxx_messageInfo_ListFacultyRequest.Size(m)
}
func (m *ListFacultyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFacultyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListFacultyRequest proto.InternalMessageInfo

func (m *ListFacultyRequest) GetSchool() string {
	if m != nil {
		return m.School
	}
	return ""
}

func (m *ListFacultyRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ListFacultyRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *ListFacultyRequest) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func init() {
	proto.RegisterType((*Faculty)(nil), "hallpass.Faculty")
	proto.RegisterType((*AddFacultyRequest)(nil), "hallpass.AddFacultyRequest")
	proto.RegisterType((*AddFacultyResponse)(nil), "hallpass.AddFacultyResponse")
	proto.RegisterType((*UpdateFacultyRequest)(nil), "hallpass.UpdateFacultyRequest")
	proto.RegisterType((*UpdateFacultyResponse)(nil), "hallpass.UpdateFacultyResponse")
	proto.RegisterType((*GetFacultyRequest)(nil), "hallpass.GetFacultyRequest")
	proto.RegisterType((*ListFacultyRequest)(nil), "hallpass.ListFacultyRequest")
}

func init() { proto.RegisterFile("faculty.proto", fileDescriptor_72b9aa22f203a502) }

var fileDescriptor_72b9aa22f203a502 = []byte{
	// 360 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x94, 0x4d, 0x4b, 0xfb, 0x40,
	0x10, 0xc6, 0xbb, 0xe9, 0xfb, 0xfc, 0x69, 0xa1, 0x43, 0xff, 0x12, 0x5a, 0x5f, 0x4a, 0x4e, 0x3d,
	0x15, 0xd1, 0x93, 0x17, 0x41, 0x11, 0x45, 0x14, 0x0f, 0x11, 0xcf, 0xb2, 0x76, 0xa7, 0x36, 0x90,
	0x34, 0xb1, 0xbb, 0x15, 0x3c, 0x28, 0x82, 0x1f, 0xc9, 0x2f, 0x28, 0xdd, 0x6c, 0x4c, 0x4c, 0xd3,
	0x5e, 0x7b, 0x9c, 0xf9, 0xd1, 0x7d, 0xe6, 0x79, 0x66, 0x1a, 0x68, 0x4d, 0xf8, 0x78, 0xe1, 0xab,
	0xb7, 0x51, 0x34, 0x0f, 0x55, 0x88, 0x8d, 0x29, 0xf7, 0xfd, 0x88, 0x4b, 0xe9, 0x7c, 0x31, 0xa8,
	0x5f, 0xc6, 0x0c, 0xdb, 0x60, 0x79, 0xc2, 0x66, 0x03, 0x36, 0x2c, 0xbb, 0x96, 0x27, 0x70, 0x07,
	0x6a, 0x72, 0x3c, 0x0d, 0x43, 0xdf, 0xb6, 0x06, 0x6c, 0xd8, 0x74, 0x4d, 0x85, 0x5d, 0xa8, 0x52,
	0xc0, 0x3d, 0xdf, 0x2e, 0xeb, 0x76, 0x5c, 0xe0, 0x1e, 0xc0, 0xc4, 0x9b, 0x4b, 0xf5, 0x38, 0xe3,
	0x01, 0xd9, 0x15, 0x8d, 0x9a, 0xba, 0x73, 0xc7, 0x03, 0xc2, 0x3e, 0x34, 0x7d, 0x9e, 0xd0, 0xaa,
	0xa6, 0x8d, 0x65, 0x63, 0x09, 0x9d, 0x77, 0xe8, 0x9c, 0x09, 0x61, 0xe6, 0x70, 0xe9, 0x65, 0x41,
	0x52, 0x65, 0xe4, 0x59, 0xb1, 0xbc, 0xb5, 0x5e, 0xbe, 0xbc, 0x51, 0xbe, 0x92, 0x93, 0xbf, 0x00,
	0xcc, 0xca, 0xcb, 0x28, 0x9c, 0x49, 0x5a, 0xea, 0x70, 0x21, 0x28, 0x4e, 0xa4, 0xe1, 0xc6, 0x05,
	0xda, 0x50, 0x0f, 0x48, 0x4a, 0xfe, 0x4c, 0x46, 0x3f, 0x29, 0x9d, 0x4f, 0x06, 0xdd, 0x87, 0x48,
	0x70, 0x45, 0x5b, 0x33, 0x72, 0x03, 0xff, 0x73, 0x13, 0x18, 0x2f, 0x36, 0xd4, 0x17, 0x1a, 0x24,
	0x6e, 0x92, 0x72, 0x83, 0x9f, 0x13, 0xe8, 0x5c, 0x91, 0xca, 0x79, 0xc9, 0xdf, 0x48, 0xa1, 0x07,
	0xe7, 0x03, 0xf0, 0xd6, 0x93, 0x6a, 0x5b, 0x39, 0x1c, 0x7d, 0x5b, 0xd0, 0x36, 0xe2, 0xf7, 0x34,
	0x7f, 0xf5, 0xc6, 0x84, 0xd7, 0x00, 0xe9, 0x8e, 0xb1, 0x3f, 0x4a, 0xfe, 0x01, 0xa3, 0x95, 0xc3,
	0xeb, 0xed, 0x16, 0xc3, 0x38, 0x4a, 0xa7, 0x84, 0x2e, 0xb4, 0xfe, 0xa4, 0x8c, 0xfb, 0xe9, 0x0f,
	0x8a, 0x0e, 0xa0, 0x77, 0xb0, 0x96, 0xff, 0xbe, 0x79, 0x0a, 0x90, 0x86, 0x9d, 0x1d, 0x6f, 0x65,
	0x05, 0xbd, 0x4e, 0x0a, 0x0d, 0x71, 0x4a, 0x78, 0x0e, 0xff, 0x32, 0x89, 0x63, 0xc6, 0xc2, 0xea,
	0x22, 0x0a, 0x5f, 0x38, 0x64, 0x4f, 0x35, 0xfd, 0x71, 0x38, 0xfe, 0x09, 0x00, 0x00, 0xff, 0xff,
	0xbe, 0xe5, 0x05, 0x97, 0x2d, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FacultyServiceClient is the client API for FacultyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FacultyServiceClient interface {
	AddFaculty(ctx context.Context, in *AddFacultyRequest, opts ...grpc.CallOption) (*AddFacultyResponse, error)
	UpdateFaculty(ctx context.Context, in *UpdateFacultyRequest, opts ...grpc.CallOption) (*UpdateFacultyResponse, error)
	GetFaculty(ctx context.Context, in *GetFacultyRequest, opts ...grpc.CallOption) (*Faculty, error)
	ListFaculty(ctx context.Context, in *ListFacultyRequest, opts ...grpc.CallOption) (FacultyService_ListFacultyClient, error)
}

type facultyServiceClient struct {
	cc *grpc.ClientConn
}

func NewFacultyServiceClient(cc *grpc.ClientConn) FacultyServiceClient {
	return &facultyServiceClient{cc}
}

func (c *facultyServiceClient) AddFaculty(ctx context.Context, in *AddFacultyRequest, opts ...grpc.CallOption) (*AddFacultyResponse, error) {
	out := new(AddFacultyResponse)
	err := c.cc.Invoke(ctx, "/hallpass.FacultyService/AddFaculty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *facultyServiceClient) UpdateFaculty(ctx context.Context, in *UpdateFacultyRequest, opts ...grpc.CallOption) (*UpdateFacultyResponse, error) {
	out := new(UpdateFacultyResponse)
	err := c.cc.Invoke(ctx, "/hallpass.FacultyService/UpdateFaculty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *facultyServiceClient) GetFaculty(ctx context.Context, in *GetFacultyRequest, opts ...grpc.CallOption) (*Faculty, error) {
	out := new(Faculty)
	err := c.cc.Invoke(ctx, "/hallpass.FacultyService/GetFaculty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *facultyServiceClient) ListFaculty(ctx context.Context, in *ListFacultyRequest, opts ...grpc.CallOption) (FacultyService_ListFacultyClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FacultyService_serviceDesc.Streams[0], "/hallpass.FacultyService/ListFaculty", opts...)
	if err != nil {
		return nil, err
	}
	x := &facultyServiceListFacultyClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FacultyService_ListFacultyClient interface {
	Recv() (*Faculty, error)
	grpc.ClientStream
}

type facultyServiceListFacultyClient struct {
	grpc.ClientStream
}

func (x *facultyServiceListFacultyClient) Recv() (*Faculty, error) {
	m := new(Faculty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FacultyServiceServer is the server API for FacultyService service.
type FacultyServiceServer interface {
	AddFaculty(context.Context, *AddFacultyRequest) (*AddFacultyResponse, error)
	UpdateFaculty(context.Context, *UpdateFacultyRequest) (*UpdateFacultyResponse, error)
	GetFaculty(context.Context, *GetFacultyRequest) (*Faculty, error)
	ListFaculty(*ListFacultyRequest, FacultyService_ListFacultyServer) error
}

// UnimplementedFacultyServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFacultyServiceServer struct {
}

func (*UnimplementedFacultyServiceServer) AddFaculty(ctx context.Context, req *AddFacultyRequest) (*AddFacultyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFaculty not implemented")
}
func (*UnimplementedFacultyServiceServer) UpdateFaculty(ctx context.Context, req *UpdateFacultyRequest) (*UpdateFacultyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFaculty not implemented")
}
func (*UnimplementedFacultyServiceServer) GetFaculty(ctx context.Context, req *GetFacultyRequest) (*Faculty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFaculty not implemented")
}
func (*UnimplementedFacultyServiceServer) ListFaculty(req *ListFacultyRequest, srv FacultyService_ListFacultyServer) error {
	return status.Errorf(codes.Unimplemented, "method ListFaculty not implemented")
}

func RegisterFacultyServiceServer(s *grpc.Server, srv FacultyServiceServer) {
	s.RegisterService(&_FacultyService_serviceDesc, srv)
}

func _FacultyService_AddFaculty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFacultyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FacultyServiceServer).AddFaculty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hallpass.FacultyService/AddFaculty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FacultyServiceServer).AddFaculty(ctx, req.(*AddFacultyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FacultyService_UpdateFaculty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFacultyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FacultyServiceServer).UpdateFaculty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hallpass.FacultyService/UpdateFaculty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FacultyServiceServer).UpdateFaculty(ctx, req.(*UpdateFacultyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FacultyService_GetFaculty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFacultyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FacultyServiceServer).GetFaculty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hallpass.FacultyService/GetFaculty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FacultyServiceServer).GetFaculty(ctx, req.(*GetFacultyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FacultyService_ListFaculty_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListFacultyRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FacultyServiceServer).ListFaculty(m, &facultyServiceListFacultyServer{stream})
}

type FacultyService_ListFacultyServer interface {
	Send(*Faculty) error
	grpc.ServerStream
}

type facultyServiceListFacultyServer struct {
	grpc.ServerStream
}

func (x *facultyServiceListFacultyServer) Send(m *Faculty) error {
	return x.ServerStream.SendMsg(m)
}

var _FacultyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hallpass.FacultyService",
	HandlerType: (*FacultyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddFaculty",
			Handler:    _FacultyService_AddFaculty_Handler,
		},
		{
			MethodName: "UpdateFaculty",
			Handler:    _FacultyService_UpdateFaculty_Handler,
		},
		{
			MethodName: "GetFaculty",
			Handler:    _FacultyService_GetFaculty_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListFaculty",
			Handler:       _FacultyService_ListFaculty_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "faculty.proto",
}
